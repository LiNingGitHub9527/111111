version: 2.1

jobs:
  build:
    machine:
      # docker composeが使えるイメージを選択
      image: circleci/classic:edge
    working_directory: ~/111111
    steps:
      - checkout
      - run:
          name: "環境構築"
          working_directory: ~/
          command: |
            sudo tee -a /etc/hosts \<<<'127.0.0.1 local.shareg.com'
            git clone git@github.com:superHeroDDD/111111.git
            mkdir ~/111111/apps
            mv ~/111111/.env4circleci ~/111111/.env
            mv ~/111111 ~/111111/apps
      - run:
          name: "コンテナのビルド"
          working_directory: ~/111111
          command: |
            docker-compose build
      - run:
          name: "コンテナの立ち上げ"
          working_directory: ~/111111
          command: |
            docker-compose up -d
      - run:
          name: "DB初期化"
          working_directory: ~/111111
          command: |
            sleep 60 && docker-compose exec mysql sh -c "/bin/echo 'create database shareg' | /usr/bin/mysql -uroot -proot"
      - run:
          name: "初期設定"
          working_directory: ~/111111
          command: |
            docker-compose exec php sh -c "cd 111111 && /usr/local/bin/composer install"
            docker-compose exec php sh -c "cd 111111 && /usr/local/bin/php artisan key:generate"
            docker-compose exec php sh -c "cd 111111 && /usr/local/bin/php artisan storage:link"
            docker-compose exec php sh -c "cd 111111 && /bin/chmod -R 777 storage/"
            docker-compose exec php sh -c "cd 111111 && /usr/local/bin/php artisan migrate"
            docker-compose exec php sh -c "cd 111111 && /usr/local/bin/php artisan db:seed"
      - run:
          name: "テスト"
          working_directory: ~/111111/apps/111111
          command: |
            docker-compose exec php sh -c "cd 111111 && vendor/bin/phpunit tests/Unit/ExampleTest.php"
  deploy:
    machine:
      image: circleci/classic:edge
    steps:
      - checkout
      - add_ssh_keys:
          # circle ciで登録した秘密鍵のfingerprint
          fingerprints:
            - "d5:5f:b1:0b:2d:7e:60:b7:b6:f9:f0:6f:fd:72:fd:9a"
      # ステージング環境で実行したいコマンド
      - run: ssh ${STG_USER}@${STG_HOST} 'cd ~ && pwd'

workflows:
  build_and_deploy:
    jobs:
      - build
      - deploy:
          # 先にbuildを実行させるためbuildのジョブに依存させる
          requires:
            - build
          filters:
            branches:
              # pull requestのマージでdeployジョブを実行させるブランチ
              only: circleci-deploy-test